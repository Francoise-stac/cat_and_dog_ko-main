name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      chrome:
        image: selenium/standalone-chrome:latest
        options: --shm-size="2g"
        ports:
          - 4444:4444

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Create necessary directories
        run: |
          mkdir -p models
          mkdir -p instance
          mkdir -p tests/test_data

      - name: Download model file
        run: |
          curl -L -o models/model.keras https://github.com/Francoise-stac/cat_and_dog_ko-main/raw/main/models/model.keras || touch models/model.keras

      - name: Create test image
        run: |
          python -c "
          from PIL import Image
          import numpy as np
          # Create a test image
          img = Image.fromarray(np.random.randint(0, 255, (224, 224, 3), dtype=np.uint8))
          img.save('tests/test_data/cat.jpg')
          "

      - name: Start Flask application
        run: |
          python -m flask run &
          sleep 5  # Wait for Flask to start
        env:
          FLASK_APP: app.py
          FLASK_ENV: testing
          PYTHONPATH: ${{ github.workspace }}
          MODEL_PATH: models/model.keras

      - name: Run tests
        run: pytest -v --driver Chrome --driver-path /usr/lib/chromium-browser/chromedriver
        env:
          PYTHONPATH: ${{ github.workspace }}
          TESTING: 'True'
          MODEL_PATH: 'models/model.keras'
          FLASK_APP: app.py
          FLASK_ENV: testing
          SELENIUM_HUB_URL: http://localhost:4444/wd/hub

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-logs
          path: |
            pytest-logs.txt
            .pytest_cache
