name: Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy and Run Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            # echo "hello world"
            set -e
            echo "Logging into Docker Hub on the remote server..."

            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # echo "Testing connection..."
            # whoami
            # docker info
            
            echo "Manipulating containers..."
            docker stop cat-dog-app || true
            docker rm cat-dog-app || true
            
            echo "Pulling new image..."
            docker pull gessyken/cat-dog-app:latest
            
            echo "Starting new container..."
            docker run -d \
              --name cat-dog-app \
              -p 5000:5000 \
              -p 5001:5001 \
              --restart unless-stopped \
              gessyken/cat-dog-app:latest

            
      # - name: Setup SSH
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     eval $(ssh-agent -s)
      #     ssh-add ~/.ssh/id_rsa
      #     ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # - name: Deploy to Server
      #   env:
      #     SERVER_HOST: ${{ secrets.SERVER_HOST }}
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa deploy@${SERVER_HOST} '
      #       set -e
      #       echo "Testing connection..."
      #       whoami
      #       docker info
            
      #       echo "Manipulating containers..."
      #       docker stop cat-dog-app || true
      #       docker rm cat-dog-app || true
            
      #       echo "Pulling new image..."
      #       docker pull '"${{ secrets.DOCKER_USERNAME }}"'/cat-dog-app:latest
            
      #       echo "Starting new container..."
      #       docker run -d \
      #         --name cat-dog-app \
      #         -p 5000:5000 \
      #         -p 5001:5001 \
      #         --restart unless-stopped \
      #         '"${{ secrets.DOCKER_USERNAME }}"'/cat-dog-app:latest
      #     '