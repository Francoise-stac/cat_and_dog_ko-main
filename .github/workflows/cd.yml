name: Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check connection to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          command_timeout: 20m
          script_stop: true
          proxy_timeout: 30s
          script: |
            echo "Connection test successful"
            whoami
            uname -a

      - name: Deploy and Run Docker Container
        uses: appleboy/ssh-action@v0.1.10
        if: success()
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          command_timeout: 20m
          script_stop: true
          timeout: 60s
          script: |
            set -e
            echo "Logging into Docker Hub on the remote server..."

            # Pour éviter que le mot de passe soit visible dans les logs
            echo "Docker login..."
            docker logout
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            echo "Vérification des conteneurs existants..."
            docker ps -a | grep cat-dog-app || echo "Aucun conteneur existant trouvé"
            
            echo "Arrêt et suppression des anciens conteneurs..."
            # S'assurer que le conteneur est arrêté et supprimé, même s'il est en cours d'exécution
            docker stop cat-dog-app || echo "Aucun conteneur à arrêter"
            docker rm -f cat-dog-app || echo "Aucun conteneur à supprimer"
            
            # Vérification supplémentaire qu'aucun conteneur n'existe avec ce nom
            if docker ps -a --format "{{.Names}}" | grep -q "^cat-dog-app$"; then
              echo "Suppression forcée du conteneur qui persiste..."
              docker rm -f cat-dog-app
            fi
            
            echo "Pulling new image..."
            docker pull fdjeumen/cat_and_dog_ko-main-app:latest
            
            echo "Starting new container..."
            docker run -d \
              --name cat-dog-app \
              -p 5000:5000 \
              -p 5001:5001 \
              --restart unless-stopped \
              fdjeumen/cat_and_dog_ko-main-app:latest
            
            echo "Vérification que le conteneur est bien démarré..."
            docker ps | grep cat-dog-app
            
            echo "Attente de 5 secondes pour laisser l'application démarrer..."
            sleep 5
            
            echo "Logs du conteneur pour vérification:"
            docker logs --tail 20 cat-dog-app