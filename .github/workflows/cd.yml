name: Continuous Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/cat-dog-app:latest

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
      - name: Decode and Save SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > id_rsa
          chmod 600 id_rsa
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            ls
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: deploy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
        env:
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ls
            # set -e
            # echo "Testing connection..."
            # whoami
            # docker info
            
            # echo "Stopping and removing existing container..."
            # docker stop cat-dog-app || true
            # docker rm cat-dog-app || true
            
            # echo "Cleaning up old image..."
            # docker image rm ${{ secrets.DOCKER_USERNAME }}/cat-dog-app:latest || true
            
            # echo "Pulling new image..."
            # docker pull ${{ secrets.DOCKER_USERNAME }}/cat-dog-app:latest
            
            # echo "Starting new container..."
            # docker run -d \
            #   --name cat-dog-app \
            #   -p 5000:5000 \
            #   -p 5001:5001 \
            #   --restart unless-stopped \
            #   ${{ secrets.DOCKER_USERNAME }}/cat-dog-app:latest
